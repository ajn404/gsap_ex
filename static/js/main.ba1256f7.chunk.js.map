{"version":3,"sources":["FadeInAnimation.js","App.js","reportWebVitals.js","index.js"],"names":["FadeInAnimation","fadeDirection","children","wrapperElement","direction","delay","props","Component","compRef","useRef","distance","x","y","useEffect","gsap","from","current","opacity","ref","str","App","window","addEventListener","location","reload","className","split","map","item","index","push","style","fontWeight","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRA4CeA,EAzCS,SAAC,GAMlB,IAIDC,EATJC,EAKI,EALJA,SAKI,IAJJC,sBAII,MAJa,MAIb,MAHJC,iBAGI,MAHQ,KAGR,MAFJC,aAEI,MAFI,EAEJ,EADDC,EACC,iBACEC,EAAYJ,EACdK,EAAUC,iBAAO,MACfC,EAAW,IAEjB,OAAQN,GACN,IAAK,OACHH,EAAgB,CAAEU,GAAG,KACrB,MACF,IAAK,QACHV,EAAgB,CAAEU,EAAGD,GACrB,MACF,IAAK,KACHT,EAAgB,CAAEW,EAAGF,GACrB,MACF,IAAK,OACHT,EAAgB,CAAEW,GAAG,KACrB,MACF,QACEX,EAAgB,CAAEU,EAAG,GASzB,OAPAE,qBAAU,WACRC,IAAKC,KAAKP,EAAQQ,QAAS,EAA3B,2BACKf,GADL,IAEEgB,QAAS,EACTZ,aAED,CAACG,EAASP,EAAeI,IAE1B,cAACE,EAAD,yBAAWW,IAAKV,GAAaF,GAA7B,aACGJ,MC7BHiB,G,MAAM,IASK,SAASC,IAQtB,OAPAP,qBAAU,WACRQ,OAAOC,iBAAiB,SAAQ,WAC9BD,OAAOE,SAASC,eAMhB,qBAAKC,UAAU,MAAf,SACGN,IAzBK,6NAORO,MAAM,KAAKC,KAAI,SAACC,EAAMC,GAK1B,OAJAV,EAAIW,KAAK,cAAC,EAAD,CAAiB1B,UAAU,OAAO2B,MAAO,CAChDC,WAAY,OACZC,SAAU,QACT5B,MAAa,IAANwB,EAHD,SAGyBD,GAARC,IACnBV,KChBT,IAYee,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ba1256f7.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { gsap } from \"gsap\";\n\nconst FadeInAnimation = ({\n  children,\n  wrapperElement = \"div\",\n  direction = null,\n  delay = 0,\n  ...props\n}) => {\n  const Component = wrapperElement;\n  let compRef = useRef(null);\n  const distance = 200;\n  let fadeDirection;\n  switch (direction) {\n    case \"left\":\n      fadeDirection = { x: -distance };\n      break;\n    case \"right\":\n      fadeDirection = { x: distance };\n      break;\n    case \"up\":\n      fadeDirection = { y: distance };\n      break;\n    case \"down\":\n      fadeDirection = { y: -distance };\n      break;\n    default:\n      fadeDirection = { x: 0 };\n  }\n  useEffect(() => {\n    gsap.from(compRef.current, 1, {\n      ...fadeDirection,\n      opacity: 0,\n      delay,\n    });\n  }, [compRef, fadeDirection, delay]);\n  return (\n    <Component ref={compRef} {...props}>\n      {children}\n    </Component>\n  );\n};\n\nexport default FadeInAnimation;\n","import React,{useEffect} from \"react\";\nimport FadeInAnimation from \"./FadeInAnimation\";\nimport './App.css';\n\nconst words = \"Hello darkness my old friend,\" +\n    \"i've come to talk with you again,\" +\n    \"because a version softly creeping,\" +\n    \"left it's seed while i was sleeping,And the vision that was planted in my brain,\" +\n    \"Still remains within,\" +\n    \"the sound of silence.\"\nlet str = [];\nwords.split(',').map((item, index) => {\n  str.push(<FadeInAnimation direction=\"left\" style={{\n    fontWeight: \"bold\",\n    fontSize: \"20px\"\n  }} delay={index*1.5} key={index}>{item}</FadeInAnimation>)\n  return str\n})\n\nexport default function App() {\n  useEffect(()=>{\n    window.addEventListener('click',()=>{\n      window.location.reload()\n    })\n  });\n\n\n  return (\n      <div className='App'>\n        {str}\n      </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}